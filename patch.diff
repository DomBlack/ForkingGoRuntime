diff --git a/go-src/src/runtime/proc.go b/go-src/src/runtime/proc.go
index 554a60d747..4f894da277 100644
--- a/go-src/src/runtime/proc.go
+++ b/go-src/src/runtime/proc.go
@@ -143,6 +143,7 @@ var initSigmask sigset

 // The main goroutine.
 func main() {
+	print("Go main exit")
 	mp := getg().m

 	// Racectx of m0->g0 is used only as the parent of the main goroutine.
@@ -271,6 +272,8 @@ func main() {
 	}
 	runExitHooks(0)

+	print("Go main exit")
+
 	exit(0)
 	for {
 		var x *int32
@@ -3625,6 +3628,7 @@ func goexit1() {

 // goexit continuation on g0.
 func goexit0(gp *g) {
+	println("Go Routine exit")
 	mp := getg().m
 	pp := mp.p.ptr()

@@ -4257,6 +4261,7 @@ func newproc(fn *funcval) {
 // address of the go statement that created this. The caller is responsible
 // for adding the new g to the scheduler.
 func newproc1(fn *funcval, callergp *g, callerpc uintptr) *g {
+	println("Go Routine start")
 	if fn == nil {
 		fatal("go of nil func value")
 	}
